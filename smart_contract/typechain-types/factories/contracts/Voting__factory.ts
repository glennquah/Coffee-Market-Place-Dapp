/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_coffeeCandidateNames",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_coffeeImageUrls",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_coffeeDescriptions",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_coffeeOrigins",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_beanTypes",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_roastLevels",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "_durationInMinutes",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "coffeeName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "coffeeOrigin",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "beanType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "roastLevel",
        type: "string",
      },
    ],
    name: "CoffeeCandidateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    name: "CoffeeVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_coffeeName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_coffeeOrigin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_beanType",
        type: "string",
      },
      {
        internalType: "string",
        name: "_roastLevel",
        type: "string",
      },
    ],
    name: "addCoffeeCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidateCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "coffee_vote_candidates",
    outputs: [
      {
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "coffeeName",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "coffeeOrigin",
        type: "string",
      },
      {
        internalType: "string",
        name: "beanType",
        type: "string",
      },
      {
        internalType: "string",
        name: "roastLevel",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "customers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVotesOfCoffeeCandiates",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "candidateId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "coffeeName",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "coffeeOrigin",
            type: "string",
          },
          {
            internalType: "string",
            name: "beanType",
            type: "string",
          },
          {
            internalType: "string",
            name: "roastLevel",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.CoffeeVoteCandidate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getCoffeeCandidate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "candidateId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "coffeeName",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "coffeeOrigin",
            type: "string",
          },
          {
            internalType: "string",
            name: "beanType",
            type: "string",
          },
          {
            internalType: "string",
            name: "roastLevel",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.CoffeeVoteCandidate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTimeLeftToVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpenToVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_coffeeCandidateIndex",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50604051612b41380380612b4183398181016040528101906100369190610504565b60005b87518110156102005760016040518061010001604052806000808154809291906100629061067d565b9190505581526020018a848151811061007e5761007d6106c5565b5b6020026020010151815260200189848151811061009e5761009d6106c5565b5b602002602001015181526020018884815181106100be576100bd6106c5565b5b602002602001015181526020018784815181106100de576100dd6106c5565b5b602002602001015181526020018684815181106100fe576100fd6106c5565b5b6020026020010151815260200185848151811061011e5761011d6106c5565b5b6020026020010151815260200160008152509080600181540180825580915050600190039060005260206000209060080201600090919091909150600082015181600001556020820151816001019081610178919061090b565b50604082015181600201908161018e919061090b565b5060608201518160030190816101a4919061090b565b5060808201518160040190816101ba919061090b565b5060a08201518160050190816101d0919061090b565b5060c08201518160060190816101e6919061090b565b5060e0820151816007015550508080600101915050610039565b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600481905550603c8161025691906109dd565b426102619190610a1f565b60058190555050505050505050610a53565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102d58261028c565b810181811067ffffffffffffffff821117156102f4576102f361029d565b5b80604052505050565b6000610307610273565b905061031382826102cc565b919050565b600067ffffffffffffffff8211156103335761033261029d565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156103695761036861029d565b5b6103728261028c565b9050602081019050919050565b60005b8381101561039d578082015181840152602081019050610382565b60008484015250505050565b60006103bc6103b78461034e565b6102fd565b9050828152602081018484840111156103d8576103d7610349565b5b6103e384828561037f565b509392505050565b600082601f830112610400576103ff610287565b5b81516104108482602086016103a9565b91505092915050565b600061042c61042784610318565b6102fd565b9050808382526020820190506020840283018581111561044f5761044e610344565b5b835b8181101561049657805167ffffffffffffffff81111561047457610473610287565b5b80860161048189826103eb565b85526020850194505050602081019050610451565b5050509392505050565b600082601f8301126104b5576104b4610287565b5b81516104c5848260208601610419565b91505092915050565b6000819050919050565b6104e1816104ce565b81146104ec57600080fd5b50565b6000815190506104fe816104d8565b92915050565b600080600080600080600060e0888a0312156105235761052261027d565b5b600088015167ffffffffffffffff81111561054157610540610282565b5b61054d8a828b016104a0565b975050602088015167ffffffffffffffff81111561056e5761056d610282565b5b61057a8a828b016104a0565b965050604088015167ffffffffffffffff81111561059b5761059a610282565b5b6105a78a828b016104a0565b955050606088015167ffffffffffffffff8111156105c8576105c7610282565b5b6105d48a828b016104a0565b945050608088015167ffffffffffffffff8111156105f5576105f4610282565b5b6106018a828b016104a0565b93505060a088015167ffffffffffffffff81111561062257610621610282565b5b61062e8a828b016104a0565b92505060c061063f8a828b016104ef565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610688826104ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106ba576106b961064e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061074657607f821691505b602082108103610759576107586106ff565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107c17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610784565b6107cb8683610784565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108086108036107fe846104ce565b6107e3565b6104ce565b9050919050565b6000819050919050565b610822836107ed565b61083661082e8261080f565b848454610791565b825550505050565b600090565b61084b61083e565b610856818484610819565b505050565b5b8181101561087a5761086f600082610843565b60018101905061085c565b5050565b601f8211156108bf576108908161075f565b61089984610774565b810160208510156108a8578190505b6108bc6108b485610774565b83018261085b565b50505b505050565b600082821c905092915050565b60006108e2600019846008026108c4565b1980831691505092915050565b60006108fb83836108d1565b9150826002028217905092915050565b610914826106f4565b67ffffffffffffffff81111561092d5761092c61029d565b5b610937825461072e565b61094282828561087e565b600060209050601f8311600181146109755760008415610963578287015190505b61096d85826108ef565b8655506109d5565b601f1984166109838661075f565b60005b828110156109ab57848901518255600182019150602085019450602081019050610986565b868310156109c857848901516109c4601f8916826108d1565b8355505b6001600288020188555050505b505050505050565b60006109e8826104ce565b91506109f3836104ce565b9250828202610a01816104ce565b91508282048414831517610a1857610a1761064e565b5b5092915050565b6000610a2a826104ce565b9150610a35836104ce565b9250828201905080821115610a4d57610a4c61064e565b5b92915050565b6120df80610a626000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635d835515116100715780635d835515146101545780635ed1df2a14610172578063a083756f14610190578063adac81f8146101ae578063e26d9718146101ca578063fab50c7c146101fa576100a9565b80630121b93f146100ae5780631ea736e0146100ca5780632019a608146100e8578063336989ae146101065780633bc990db14610136575b600080fd5b6100c860048036038101906100c39190611285565b610231565b005b6100d2610419565b6040516100df91906112c1565b60405180910390f35b6100f061041f565b6040516100fd91906112c1565b60405180910390f35b610120600480360381019061011b919061133a565b610425565b60405161012d9190611382565b60405180910390f35b61013e610445565b60405161014b91906112c1565b60405180910390f35b61015c61044b565b60405161016991906115d1565b60405180910390f35b61017a61082b565b60405161018791906112c1565b60405180910390f35b610198610898565b6040516101a59190611382565b60405180910390f35b6101c860048036038101906101c39190611728565b6108b2565b005b6101e460048036038101906101df9190611285565b610a6a565b6040516101f19190611930565b60405180910390f35b610214600480360381019061020f9190611285565b610e6e565b60405161022898979695949392919061199c565b60405180910390f35b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590611ab6565b60405180910390fd5b6001805490508110610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fc90611b6e565b60405180910390fd5b61030d610898565b61034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034390611bda565b60405180910390fd5b600181815481106103605761035f611bfa565b5b9060005260206000209060080201600701600081548092919061038290611c58565b91905055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6e13a87449990c52243c54908e52bdb64a22e3fcc51466d0e802a780417413788160405161040e91906112c1565b60405180910390a150565b60055481565b60045481565b60036020528060005260406000206000915054906101000a900460ff1681565b60005481565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610822578382906000526020600020906008020160405180610100016040529081600082015481526020016001820180546104ad90611ccf565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990611ccf565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b5050505050815260200160028201805461053f90611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461056b90611ccf565b80156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b505050505081526020016003820180546105d190611ccf565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd90611ccf565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b5050505050815260200160048201805461066390611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461068f90611ccf565b80156106dc5780601f106106b1576101008083540402835291602001916106dc565b820191906000526020600020905b8154815290600101906020018083116106bf57829003601f168201915b505050505081526020016005820180546106f590611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461072190611ccf565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b5050505050815260200160068201805461078790611ccf565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611ccf565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b505050505081526020016007820154815250508152602001906001019061046f565b50505050905090565b6000600454421015610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611d4c565b60405180910390fd5b60055442106108845760009050610895565b426005546108929190611d6c565b90505b90565b600060045442101580156108ad575060055442105b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090c57600080fd5b600160405180610100016040528060008081548092919061092c90611c58565b919050558152602001888152602001878152602001868152602001858152602001848152602001838152602001600081525090806001815401808255809150506001900390600052602060002090600802016000909190919091506000820151816000015560208201518160010190816109a69190611f4c565b5060408201518160020190816109bc9190611f4c565b5060608201518160030190816109d29190611f4c565b5060808201518160040190816109e89190611f4c565b5060a08201518160050190816109fe9190611f4c565b5060c0820151816006019081610a149190611f4c565b5060e0820151816007015550507f5517871a0c25b2c9be445c573ba073cc635592643e951ff5c9d5fe125f357f6e868686868686604051610a5a9695949392919061201e565b60405180910390a1505050505050565b610a726111f6565b6001805490508210610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090611b6e565b60405180910390fd5b60018281548110610acd57610acc611bfa565b5b90600052602060002090600802016040518061010001604052908160008201548152602001600182018054610b0190611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2d90611ccf565b8015610b7a5780601f10610b4f57610100808354040283529160200191610b7a565b820191906000526020600020905b815481529060010190602001808311610b5d57829003601f168201915b50505050508152602001600282018054610b9390611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbf90611ccf565b8015610c0c5780601f10610be157610100808354040283529160200191610c0c565b820191906000526020600020905b815481529060010190602001808311610bef57829003601f168201915b50505050508152602001600382018054610c2590611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5190611ccf565b8015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505050508152602001600482018054610cb790611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce390611ccf565b8015610d305780601f10610d0557610100808354040283529160200191610d30565b820191906000526020600020905b815481529060010190602001808311610d1357829003601f168201915b50505050508152602001600582018054610d4990611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7590611ccf565b8015610dc25780601f10610d9757610100808354040283529160200191610dc2565b820191906000526020600020905b815481529060010190602001808311610da557829003601f168201915b50505050508152602001600682018054610ddb90611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790611ccf565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b505050505081526020016007820154815250509050919050565b60018181548110610e7e57600080fd5b9060005260206000209060080201600091509050806000015490806001018054610ea790611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed390611ccf565b8015610f205780601f10610ef557610100808354040283529160200191610f20565b820191906000526020600020905b815481529060010190602001808311610f0357829003601f168201915b505050505090806002018054610f3590611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6190611ccf565b8015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b505050505090806003018054610fc390611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610fef90611ccf565b801561103c5780601f106110115761010080835404028352916020019161103c565b820191906000526020600020905b81548152906001019060200180831161101f57829003601f168201915b50505050509080600401805461105190611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461107d90611ccf565b80156110ca5780601f1061109f576101008083540402835291602001916110ca565b820191906000526020600020905b8154815290600101906020018083116110ad57829003601f168201915b5050505050908060050180546110df90611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461110b90611ccf565b80156111585780601f1061112d57610100808354040283529160200191611158565b820191906000526020600020905b81548152906001019060200180831161113b57829003601f168201915b50505050509080600601805461116d90611ccf565b80601f016020809104026020016040519081016040528092919081815260200182805461119990611ccf565b80156111e65780601f106111bb576101008083540402835291602001916111e6565b820191906000526020600020905b8154815290600101906020018083116111c957829003601f168201915b5050505050908060070154905088565b60405180610100016040528060008152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6112628161124f565b811461126d57600080fd5b50565b60008135905061127f81611259565b92915050565b60006020828403121561129b5761129a611245565b5b60006112a984828501611270565b91505092915050565b6112bb8161124f565b82525050565b60006020820190506112d660008301846112b2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611307826112dc565b9050919050565b611317816112fc565b811461132257600080fd5b50565b6000813590506113348161130e565b92915050565b6000602082840312156113505761134f611245565b5b600061135e84828501611325565b91505092915050565b60008115159050919050565b61137c81611367565b82525050565b60006020820190506113976000830184611373565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113d28161124f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114125780820151818401526020810190506113f7565b60008484015250505050565b6000601f19601f8301169050919050565b600061143a826113d8565b61144481856113e3565b93506114548185602086016113f4565b61145d8161141e565b840191505092915050565b60006101008301600083015161148160008601826113c9565b5060208301518482036020860152611499828261142f565b915050604083015184820360408601526114b3828261142f565b915050606083015184820360608601526114cd828261142f565b915050608083015184820360808601526114e7828261142f565b91505060a083015184820360a0860152611501828261142f565b91505060c083015184820360c086015261151b828261142f565b91505060e083015161153060e08601826113c9565b508091505092915050565b60006115478383611468565b905092915050565b6000602082019050919050565b60006115678261139d565b61157181856113a8565b935083602082028501611583856113b9565b8060005b858110156115bf57848403895281516115a0858261153b565b94506115ab8361154f565b925060208a01995050600181019050611587565b50829750879550505050505092915050565b600060208201905081810360008301526115eb818461155c565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116358261141e565b810181811067ffffffffffffffff82111715611654576116536115fd565b5b80604052505050565b600061166761123b565b9050611673828261162c565b919050565b600067ffffffffffffffff821115611693576116926115fd565b5b61169c8261141e565b9050602081019050919050565b82818337600083830152505050565b60006116cb6116c684611678565b61165d565b9050828152602081018484840111156116e7576116e66115f8565b5b6116f28482856116a9565b509392505050565b600082601f83011261170f5761170e6115f3565b5b813561171f8482602086016116b8565b91505092915050565b60008060008060008060c0878903121561174557611744611245565b5b600087013567ffffffffffffffff8111156117635761176261124a565b5b61176f89828a016116fa565b965050602087013567ffffffffffffffff8111156117905761178f61124a565b5b61179c89828a016116fa565b955050604087013567ffffffffffffffff8111156117bd576117bc61124a565b5b6117c989828a016116fa565b945050606087013567ffffffffffffffff8111156117ea576117e961124a565b5b6117f689828a016116fa565b935050608087013567ffffffffffffffff8111156118175761181661124a565b5b61182389828a016116fa565b92505060a087013567ffffffffffffffff8111156118445761184361124a565b5b61185089828a016116fa565b9150509295509295509295565b60006101008301600083015161187660008601826113c9565b506020830151848203602086015261188e828261142f565b915050604083015184820360408601526118a8828261142f565b915050606083015184820360608601526118c2828261142f565b915050608083015184820360808601526118dc828261142f565b91505060a083015184820360a08601526118f6828261142f565b91505060c083015184820360c0860152611910828261142f565b91505060e083015161192560e08601826113c9565b508091505092915050565b6000602082019050818103600083015261194a818461185d565b905092915050565b600082825260208201905092915050565b600061196e826113d8565b6119788185611952565b93506119888185602086016113f4565b6119918161141e565b840191505092915050565b6000610100820190506119b2600083018b6112b2565b81810360208301526119c4818a611963565b905081810360408301526119d88189611963565b905081810360608301526119ec8188611963565b90508181036080830152611a008187611963565b905081810360a0830152611a148186611963565b905081810360c0830152611a288185611963565b9050611a3760e08301846112b2565b9998505050505050505050565b7f596f75206861766520616c726561647920766f74656420666f72206120636f6660008201527f6665652e00000000000000000000000000000000000000000000000000000000602082015250565b6000611aa0602483611952565b9150611aab82611a44565b604082019050919050565b60006020820190508181036000830152611acf81611a93565b9050919050565b7f496e76616c696420636f666665652063616e6469646174652c20706c6561736560008201527f2073656c65637420612076616c696420636f666665652063616e64696461746560208201527f2e00000000000000000000000000000000000000000000000000000000000000604082015250565b6000611b58604183611952565b9150611b6382611ad6565b606082019050919050565b60006020820190508181036000830152611b8781611b4b565b9050919050565b7f566f74696e6720697320636c6f7365642e000000000000000000000000000000600082015250565b6000611bc4601183611952565b9150611bcf82611b8e565b602082019050919050565b60006020820190508181036000830152611bf381611bb7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c638261124f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c9557611c94611c29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ce757607f821691505b602082108103611cfa57611cf9611ca0565b5b50919050565b7f566f74696e6720686173206e6f742073746172746564207965742e0000000000600082015250565b6000611d36601b83611952565b9150611d4182611d00565b602082019050919050565b60006020820190508181036000830152611d6581611d29565b9050919050565b6000611d778261124f565b9150611d828361124f565b9250828203905081811115611d9a57611d99611c29565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611dc5565b611e0c8683611dc5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611e49611e44611e3f8461124f565b611e24565b61124f565b9050919050565b6000819050919050565b611e6383611e2e565b611e77611e6f82611e50565b848454611dd2565b825550505050565b600090565b611e8c611e7f565b611e97818484611e5a565b505050565b5b81811015611ebb57611eb0600082611e84565b600181019050611e9d565b5050565b601f821115611f0057611ed181611da0565b611eda84611db5565b81016020851015611ee9578190505b611efd611ef585611db5565b830182611e9c565b50505b505050565b600082821c905092915050565b6000611f2360001984600802611f05565b1980831691505092915050565b6000611f3c8383611f12565b9150826002028217905092915050565b611f55826113d8565b67ffffffffffffffff811115611f6e57611f6d6115fd565b5b611f788254611ccf565b611f83828285611ebf565b600060209050601f831160018114611fb65760008415611fa4578287015190505b611fae8582611f30565b865550612016565b601f198416611fc486611da0565b60005b82811015611fec57848901518255600182019150602085019450602081019050611fc7565b868310156120095784890151612005601f891682611f12565b8355505b6001600288020188555050505b505050505050565b600060c08201905081810360008301526120388189611963565b9050818103602083015261204c8188611963565b905081810360408301526120608187611963565b905081810360608301526120748186611963565b905081810360808301526120888185611963565b905081810360a083015261209c8184611963565b905097965050505050505056fea2646970667358221220cc10a1c556d43632f3d47ac545b5f61460659b95fe57ae637bc306fabdf381c564736f6c634300081b0033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _coffeeCandidateNames: string[],
    _coffeeImageUrls: string[],
    _coffeeDescriptions: string[],
    _coffeeOrigins: string[],
    _beanTypes: string[],
    _roastLevels: string[],
    _durationInMinutes: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _coffeeCandidateNames,
      _coffeeImageUrls,
      _coffeeDescriptions,
      _coffeeOrigins,
      _beanTypes,
      _roastLevels,
      _durationInMinutes,
      overrides || {}
    );
  }
  override deploy(
    _coffeeCandidateNames: string[],
    _coffeeImageUrls: string[],
    _coffeeDescriptions: string[],
    _coffeeOrigins: string[],
    _beanTypes: string[],
    _roastLevels: string[],
    _durationInMinutes: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _coffeeCandidateNames,
      _coffeeImageUrls,
      _coffeeDescriptions,
      _coffeeOrigins,
      _beanTypes,
      _roastLevels,
      _durationInMinutes,
      overrides || {}
    ) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
